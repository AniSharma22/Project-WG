// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\anisharma\GolandProjects\goprac\Project-WG\play-hub\internal\domain\interfaces\game_history_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "project2/internal/domain/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"
)

// MockGameHistoryService is a mock of GameHistoryService interface.
type MockGameHistoryService struct {
	ctrl     *gomock.Controller
	recorder *MockGameHistoryServiceMockRecorder
}

// MockGameHistoryServiceMockRecorder is the mock recorder for MockGameHistoryService.
type MockGameHistoryServiceMockRecorder struct {
	mock *MockGameHistoryService
}

// NewMockGameHistoryService creates a new mock instance.
func NewMockGameHistoryService(ctrl *gomock.Controller) *MockGameHistoryService {
	mock := &MockGameHistoryService{ctrl: ctrl}
	mock.recorder = &MockGameHistoryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGameHistoryService) EXPECT() *MockGameHistoryServiceMockRecorder {
	return m.recorder
}

// GetResultsToUpdate mocks base method.
func (m *MockGameHistoryService) GetResultsToUpdate() ([]entities.GameHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResultsToUpdate")
	ret0, _ := ret[0].([]entities.GameHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResultsToUpdate indicates an expected call of GetResultsToUpdate.
func (mr *MockGameHistoryServiceMockRecorder) GetResultsToUpdate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResultsToUpdate", reflect.TypeOf((*MockGameHistoryService)(nil).GetResultsToUpdate))
}

// GetTotalGameHistory mocks base method.
func (m *MockGameHistoryService) GetTotalGameHistory() ([]entities.GameHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalGameHistory")
	ret0, _ := ret[0].([]entities.GameHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTotalGameHistory indicates an expected call of GetTotalGameHistory.
func (mr *MockGameHistoryServiceMockRecorder) GetTotalGameHistory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalGameHistory", reflect.TypeOf((*MockGameHistoryService)(nil).GetTotalGameHistory))
}

// UpdateResult mocks base method.
func (m *MockGameHistoryService) UpdateResult(result string, slotId primitive.ObjectID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateResult", result, slotId)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateResult indicates an expected call of UpdateResult.
func (mr *MockGameHistoryServiceMockRecorder) UpdateResult(result, slotId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateResult", reflect.TypeOf((*MockGameHistoryService)(nil).UpdateResult), result, slotId)
}
